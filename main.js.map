{"version":3,"sources":["./src/environments/environment.ts","./src/app/page/product-list/product-list.component.html","./src/app/page/product-list/product-list.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/common/navbar/navbar.component.ts","./src/app/common/navbar/navbar.component.html","./src/app/service/product.service.ts","./src/app/model/product.ts","./src/app/page/product-editor/product-editor.component.ts","./src/app/page/product-editor/product-editor.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<!-- table product list -->\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-10 offset-1\">\n      <h2>Product List</h2>\n      <!-- to create                    -->\n      <button [routerLink]=\"['product/' + 0]\" class=\"btn btn-primary btn-block my-3\">\n        <i class=\"fa fa-plus\"></i>\n      </button>\n      <button [routerLink]=\"['product/' + 0]\" class=\"btn btn-primary btn-block my-3\">\n        <i class=\"fa fa-plus\"></i>\n      </button>\n      <table class=\"table table-striped\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Name</th>\n            <th>Price</th>\n            <th>Category</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody> <!-- table                            -->\n          <tr *ngFor=\"let product of productList$ | async\">\n            <td>{{ product.id }}</td>\n            <td>{{ product.name }}</td>\n            <td>{{ product.price }}</td>\n            <td>{{ product.category }}</td>\n            <td>\n              <div class=\"btn-group\">\n                <!-- editor update -->\n                <button [routerLink]=\"['product/' + product.id]\" class=\"btn btn-info\">\n                  <i class=\"fa fa-pencil\"></i>\n                </button>\n                <!-- delete -->\n                        <!-- delete click      -->\n                <button (click)=\"onDelete(product)\" class=\"btn btn-danger\">\n                  <i class=\"fa fa-trash\"></i>\n                </button>\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Product } from 'src/app/model/product';\nimport { ProductService } from 'src/app/service/product.service';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.scss']\n})\nexport class ProductListComponent implements OnInit {\n  /* table */\n  productList$: Observable<Product[]> = this.productService.getAll();\n\n  constructor(\n    private productService: ProductService,    /* table */\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  /* delete */\n  onDelete(product: Product): void {\n\n    this.productService.delProduct(product).subscribe(\n      () => {\n         this.productList$ = this.productService.getAll();\n       }\n    );\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'webshop';\n}\n","<app-navbar></app-navbar>\n\n<!-- table -->\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './common/navbar/navbar.component';\nimport { ProductListComponent } from './page/product-list/product-list.component';\nimport { ProductEditorComponent } from './page/product-editor/product-editor.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    ProductListComponent,\n    ProductEditorComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<div>\n  <nav class=\"navbar navbar-expand-sm navbar-light bg-light\">\n    <a class=\"navbar-brand\" href=\"#\">Navbar</a>\n    <button class=\"navbar-toggler d-lg-none\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavId\" aria-controls=\"collapsibleNavId\"\n        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"collapsibleNavId\">\n      <ul class=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n        <li class=\"nav-item active\">\n          <a class=\"nav-link\" routerLink=\"\">Product list <span class=\"sr-only\">(current)</span></a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"\"></a>\n        </li>\n\n      </ul>\n\n    </div>\n  </nav>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Product } from '../model/product';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n  /* table */\n  serverAddress: string = 'https://nettuts.hu/jms/arpad58/products';\n\n  constructor(\n    private http: HttpClient    /* table */\n  ) { }\n\n  /* table */\n  getAll(): Observable<Product[]> {\n    return this.http.get<Product[]>(`${this.serverAddress}`);\n  }\n\n  /* delete */\n  delProduct(product: Product): Observable<Product> {\n    return this.http.delete<Product>(`${this.serverAddress}/${product.id}`);\n  }\n\n  /* editor */\n  get(id: number): Observable<Product> {\n    return this.http.get<Product>(`${this.serverAddress}/${id}`);\n  }\n\n  /* editor update */\n  updateProduct(product: Product): Observable<Product> {\n    return this.http.patch<Product>(`${this.serverAddress}/${product.id}`, product);\n  }\n\n  /* create */\n  createProduct(product: Product): Observable<Product> {\n    return this.http.post<Product>(`${this.serverAddress}`, product);\n  }\n\n}\n","export class Product {\n  id: number = 0;\n  name: string = '';\n  price: number = 0;\n  category: string = '';\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { Product } from 'src/app/model/product';\nimport { ProductService } from 'src/app/service/product.service';\n\n@Component({\n  selector: 'app-product-editor',\n  templateUrl: './product-editor.component.html',\n  styleUrls: ['./product-editor.component.scss']\n})\nexport class ProductEditorComponent implements OnInit {\n\n  constructor(\n    private productService: ProductService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  /* editor form */\n  product$: Observable<Product> = this.activatedRoute.params.pipe(\n    switchMap(params => {\n      if (Number(params.id) === 0) {\n        return of(new Product());\n      }\n      return this.productService.get(Number(params.id));\n    })\n  );\n\n  /* create or update */\n  onSubmit(form: NgForm, product: Product): void {\n    try {\n      if (product.id == 0) {\n        this.productService.createProduct(product).subscribe(\n          () => this.router.navigate(['/'])\n        );\n      }\n      else {\n        this.productService.updateProduct(product).subscribe(\n          () => this.router.navigate(['/'])\n        );\n      }\n    } catch (error) {\n      // Error message\n    }\n  }\n}\n","\n<div class=\"container\">\n  <div class=\"row\">\n         <!-- editor form                           -->\n      <div *ngIf=\"product$ | async as product\"  class=\"col-6 offset-3\">\n      <h2>Update / Create Product</h2>\n            <!-- editor form  -->   <!-- save button  update  create       -->\n        <form #productForm=\"ngForm\" (ngSubmit)=\"onSubmit(productForm, product)\">\n        <div class=\"form-group\">\n                 <!-- editor form   -->\n          <input [(ngModel)]=\"product.id\" name=\"id\" class=\"form-control\" type=\"hidden\" >\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"\">Name</label>\n                  <!-- editor form     -->\n          <input [(ngModel)]=\"product.name\"\n          name=\"name\" class=\"form-control\" type=\"text\">\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"\">Price</label>\n                 <!-- editor form       -->\n          <input [(ngModel)]=\"product.price\"\n          name=\"price\" class=\"form-control\" type=\"text\">\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"\">Category</label>\n                 <!-- editor form          -->\n          <input [(ngModel)]=\"product.category\"\n          name=\"category\" class=\"form-control\" type=\"text\">\n        </div>\n\n        <div class=\"form-group\">\n          <!-- save button  update  create-->\n          <button  type=\"submit\" class=\"btn btn-primary btn-block mt-5\">\n            <i class=\"fa fa-save\"></i>\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ProductEditorComponent } from './page/product-editor/product-editor.component';\nimport { ProductListComponent } from './page/product-list/product-list.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProductListComponent\n  },\n  /* editor */\n  {\n    path: 'product/:id',\n    component: ProductEditorComponent\n  },\n  /* table */\n  {\n    path: '',\n    component: ProductListComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}