{"version":3,"sources":["./src/environments/environment.ts","./src/app/page/product-list/product-list.component.ts","./src/app/page/product-list/product-list.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/common/navbar/navbar.component.ts","./src/app/common/navbar/navbar.component.html","./src/app/service/product.service.ts","./src/app/model/product.ts","./src/app/page/product-editor/product-editor.component.ts","./src/app/page/product-editor/product-editor.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Product } from 'src/app/model/product';\nimport { ProductService } from 'src/app/service/product.service';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.scss']\n})\nexport class ProductListComponent implements OnInit {\n  /* create */\n  newProduct: Product = new Product();\n\n  /* table */\n  productList$: Observable<Product[]> = this.productService.getAll();\n\n  constructor(\n    private productService: ProductService,    /* table */\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  /* delete */\n  onDelete(product: Product): void {\n    this.productService.delProduct(product).subscribe(\n      () => {\n         this.productList$ = this.productService.getAll();\n       }\n    );\n  }\n\n  /* create */\n  onCreate(product: Product): void {\n    this.productService.createProduct(product).subscribe(\n      () => window.location.reload()                            /* oldal frissitese */\n    );\n  }\n}\n\n\n","<!-- create new product -->\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-6 offset-3\">\n      <h2 class=\"\">Create New Product</h2>\n      <form #productForm=\"ngForm\" class=\"\" (ngSubmit)=\"onCreate(newProduct)\">\n        <div class=\"form-group\">\n          <label for=\"\">Name</label>\n          <input [(ngModel)]=\"newProduct.name\" type=\"text\"\n            class=\"form-control\" name=\"name\">\n        </div>\n        <div class=\"form-group\">\n          <label for=\"\">Price</label>\n          <input [(ngModel)]=\"newProduct.price\" type=\"text\"\n            class=\"form-control\" name=\"price\">\n        </div>\n        <div class=\"form-group\">\n          <label for=\"\">Category</label>\n          <input [(ngModel)]=\"newProduct.category\" type=\"text\"\n            class=\"form-control\" name=\"category\">\n        </div>\n        <div class=\"form-group\">\n          <!-- save button  update -->\n          <button  type=\"submit\" class=\"btn btn-primary btn-block mt-1\">\n            <i class=\"fa fa-save\"></i>\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n\n<!-- table product list -->\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-8 offset-2\">\n      <h2>Product List</h2>\n      <table class=\"table table-striped\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Name</th>\n            <th>Price</th>\n            <th>Category</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody> <!-- table                            -->\n          <tr *ngFor=\"let product of productList$ | async\">\n            <td>{{ product.id }}</td>\n            <td>{{ product.name }}</td>\n            <td>{{ product.price }}</td>\n            <td>{{ product.category }}</td>\n            <td>\n              <div class=\"btn-group\">\n                   <!-- editor update -->\n                  <button [routerLink]=\"['product/' + product.id]\" class=\"btn btn-info\">\n                    <i class=\"fa fa-pencil\"></i>\n                  </button>\n                  <!-- delete -->\n                        <!-- delete click      -->\n                  <button (click)=\"onDelete(product)\"  class=\"btn btn-danger\">\n                    <i class=\"fa fa-trash\"></i>\n                  </button>\n              </div>\n            <td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'webshop2';\n}\n","<app-navbar></app-navbar>\n\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './common/navbar/navbar.component';\nimport { ProductListComponent } from './page/product-list/product-list.component';\nimport { ProductEditorComponent } from './page/product-editor/product-editor.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    ProductListComponent,\n    ProductEditorComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,      /* table */\n    FormsModule,           /* editor update */\n    ReactiveFormsModule,   /* editor update */\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n\n<nav class=\"navbar navbar-expand-sm navbar-light bg-light\">\n  <a class=\"navbar-brand\" href=\"#\">Navbar</a>\n  <button class=\"navbar-toggler d-lg-none\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavId\" aria-controls=\"collapsibleNavId\"\n      aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse\" id=\"collapsibleNavId\">\n    <ul class=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"\">Product list<span class=\"sr-only\">(current)</span></a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"\"></a>\n      </li>\n\n    </ul>\n\n  </div>\n</nav>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Product } from '../model/product';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n  /* table */\n  serverAddress: string = 'https://nettuts.hu/jms/arpad58/products';\n\n  constructor(\n    private http: HttpClient    /* table */\n  ) { }\n\n  /* table */\n  getAll(): Observable<Product[]> {\n    return this.http.get<Product[]>(`${this.serverAddress}`);\n  }\n\n  /* delete */\n  delProduct(product: Product): Observable<Product> {\n    return this.http.delete<Product>(`${this.serverAddress}/${product.id}`);\n  }\n\n  /* editor */\n  get(id: number): Observable<Product> {\n    return this.http.get<Product>(`${this.serverAddress}/${id}`);\n  }\n\n  /* editor update */\n  updateProduct(product: Product): Observable<Product> {\n    return this.http.patch<Product>(`${this.serverAddress}/${product.id}`, product);\n  }\n\n  /* create */\n  createProduct(product: Product): Observable<Product> {\n    return this.http.post<Product>(`${this.serverAddress}`, product);\n  }\n\n}\n","export class Product {\n  id: number = 0;\n  name: string = '';\n  price: number = 0;\n  category: string = '';\n}\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Product } from 'src/app/model/product';\nimport { ProductService } from 'src/app/service/product.service';\nimport { switchMap } from 'rxjs/operators';          /* editor update */\nimport { NgForm } from '@angular/forms';             /* editor update */\n\n@Component({\n  selector: 'app-product-editor',\n  templateUrl: './product-editor.component.html',\n  styleUrls: ['./product-editor.component.scss']\n})\nexport class ProductEditorComponent implements OnInit {\n\n  constructor(\n    private productService: ProductService,   /* editor update */\n    private activatedRoute: ActivatedRoute,   /* editor update */\n    private router: Router                    /* editor update */\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  /* editor */\n  product$: Observable<Product> = this.activatedRoute.params.pipe(\n    switchMap(params => {\n            return this.productService.get(Number(params.id));\n    })\n  );\n\n  /* editor update */\n  onSubmit(form: NgForm, product: Product): void {\n    this.productService.updateProduct(product).subscribe(\n      () => this.router.navigate(['/'])\n    );\n  }\n\n}\n","\n<!-- editor update -->\n<div class=\"container\">\n  <div class=\"row\">\n    <!-- editor                         -->\n    <div *ngIf=\"product$ | async as product\" class=\"col-6 offset-3\">\n      <h2>Update Product</h2>\n      <!-- editor             --> <!-- save button  update              -->\n      <form #productForm=\"ngForm\" (ngSubmit)=\"onSubmit(productForm, product)\">\n        <div class=\"form-group\">\n          <label for=\"\"></label>\n                 <!-- editor          -->\n          <input [(ngModel)]=\"product.id\"\n            type=\"hidden\"\n            class=\"form-control\" name=\"id\">\n        </div>\n        <div class=\"form-group\">\n          <label for=\"\">Name</label>\n                 <!-- editor          -->\n          <input [(ngModel)]=\"product.name\"\n            type=\"text\"\n            class=\"form-control\" name=\"name\">\n        </div>\n        <div class=\"form-group\">\n          <label for=\"\">Price</label>\n                 <!-- editor          -->\n          <input [(ngModel)]=\"product.price\"\n            type=\"text\"\n            class=\"form-control\" name=\"price\">\n        </div>\n        <div class=\"form-group\">\n          <label for=\"\">Category</label>\n                 <!-- editor          -->\n          <input [(ngModel)]=\"product.category\"\n            type=\"text\"\n            class=\"form-control\" name=\"category\">\n        </div>\n        <div class=\"form-group\">\n          <!-- save button  update -->\n          <button  type=\"submit\" class=\"btn btn-primary btn-block mt-5\">\n            <i class=\"fa fa-save\"></i>\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ProductEditorComponent } from './page/product-editor/product-editor.component';\nimport { ProductListComponent } from './page/product-list/product-list.component';\n\nconst routes: Routes = [\n  /* table */\n  {\n    path: '',\n    component: ProductListComponent,\n  },\n  /* editor update */\n  {\n    path: 'product/:id',\n    component: ProductEditorComponent,\n  },\n  /* table */\n  {\n    path: '**',\n    component: ProductListComponent,\n\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}